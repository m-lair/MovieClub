name: iOS Firebase Testing Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  functions-test:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install Firebase Tools
        run: npm install -g firebase-tools
          
      - name: Install Functions Dependencies
        run: |
          cd functions
          npm install
          npm install -g typescript
          tsc
          cd lib
          npm install
          cd ..
          
      - name: Start Firebase Emulators in Background
        run: |
          firebase emulators:start > firebase.log 2>&1 &
          sleep 30
          
      - name: Run Functions Tests
        run: |
          cd functions
          npm run test

  ios-build:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Set up Xcode
        run: sudo xcode-select -s /Applications/Xcode_16.app
        
      - name: Install Firebase Tools
        run: npm install -g firebase-tools
        
      - name: Install and Build Functions
        run: |
          cd functions
          npm install
          npm install -g typescript
          tsc
          cd lib
          npm install
          
      - name: Start Firebase Emulators in Background
        run: |
          firebase emulators:start > firebase.log 2>&1 &
          sleep 30
          
      - name: Setup GoogleService-Info.plist
        run: |
          echo "${{ secrets.G_SERVICE_64 }}" | base64 --decode > GoogleService-Info.plist
          
      - name: Build app for testing
        run: |
          set -o pipefail && xcodebuild build-for-testing \
          -scheme MovieClub \
          -destination "platform=iOS Simulator,name=iPhone 16 Pro,OS=latest" \
          -derivedDataPath build \
          CODE_SIGNING_ALLOWED=NO | xcpretty

  ios-test:
    needs: ios-build
    runs-on: macos-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Xcode
        run: sudo xcode-select -s /Applications/Xcode_16.app
        
      - name: Setup GoogleService-Info.plist
        run: |
          echo "${{ secrets.G_SERVICE_64 }}" | base64 --decode > GoogleService-Info.plist
          
      - name: Run tests
        run: |
          set -o pipefail && xcodebuild \
          -project MovieClub.xcodeproj \
          -scheme MovieClub \
          -destination "platform=iOS Simulator,name=iPhone 16 Pro,OS=latest" \
          test