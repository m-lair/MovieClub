name: iOS Firebase Testing Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  functions-test:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install Firebase Tools
        run: npm install -g firebase-tools
          
      - name: Install Functions Dependencies
        run: |
          cd functions
          npm install
          npm install -g typescript
          tsc
          cd lib
          npm install
          cd ..
          
      - name: Setup Service Account
        run: |
          mkdir -p /Users/runner/work/MovieClub/MovieClub/functions/src/utilities
          echo "${{ secrets.SA_KEY }}" | base64 --decode > /Users/runner/work/MovieClub/MovieClub/functions/src/utilities/service-account.json
          
      - name: Start and Verify Firebase Emulators
        run: |
          # Start emulators
          firebase emulators:start --project=movieclub-93714 --only auth,database,firestore,functions &
          echo "Waiting for emulators to start..."
          
          # Function to check if a port is responding
          check_port() {
            local port=$1
            local service=$2
            local max_attempts=30
            local attempt=1
            
            while ! nc -z localhost $port; do
              if [ $attempt -ge $max_attempts ]; then
                echo "$service emulator failed to start on port $port"
                exit 1
              fi
              echo "Waiting for $service emulator... (attempt $attempt/$max_attempts)"
              sleep 2
              attempt=$((attempt + 1))
            done
            echo "$service emulator is running on port $port"
          }
          
          # Check each emulator
          check_port 9099 "Auth"     # Auth emulator
          check_port 8080 "Firestore"  # Firestore emulator
          check_port 5001 "Functions"  # Functions emulator
          
          echo "All emulators are running!"

      - name: Run Functions Tests
        run: |
          cd functions
          npm run test

  ios-build:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Set up Xcode
        run: sudo xcode-select -s /Applications/Xcode_16.app
          
      - name: Setup GoogleService-Info.plist
        run: |
          echo "${{ secrets.G_SERVICE_64 }}" | base64 --decode > GoogleService-Info.plist
          
      - name: Build app for testing
        run: |
          set -o pipefail && xcodebuild build-for-testing \
          -scheme MovieClub \
          -destination "platform=iOS Simulator,name=iPhone 16 Pro,OS=latest" \
          -derivedDataPath build \
          CODE_SIGNING_ALLOWED=NO | xcpretty --simple

  ios-test:
    needs: ios-build
    runs-on: macos-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Xcode
        run: sudo xcode-select -s /Applications/Xcode_16.app

      - name: Setup Service Account
        run: |
          mkdir -p /Users/runner/work/MovieClub/MovieClub/functions/src/utilities
          echo "${{ secrets.SA_KEY }}" | base64 --decode > /Users/runner/work/MovieClub/MovieClub/functions/src/utilities/service-account.json
        
      - name: Setup GoogleService-Info.plist
        run: |
          echo "${{ secrets.G_SERVICE_64 }}" | base64 --decode > GoogleService-Info.plist

      - name: Install Firebase Tools
        run: npm install -g firebase-tools
        
      - name: Start and Verify Firebase Emulators
        run: |
          # Start emulators
          firebase emulators:start --project=movieclub-93714 --only auth,database,firestore,functions &
          echo "Waiting for emulators to start..."
          
          # Function to check if a port is responding
          check_port() {
            local port=$1
            local service=$2
            local max_attempts=30
            local attempt=1
            
            while ! nc -z localhost $port; do
              if [ $attempt -ge $max_attempts ]; then
                echo "$service emulator failed to start on port $port"
                exit 1
              fi
              echo "Waiting for $service emulator... (attempt $attempt/$max_attempts)"
              sleep 2
              attempt=$((attempt + 1))
            done
            echo "$service emulator is running on port $port"
          }
          
          # Check each emulator
          check_port 9099 "Auth"     # Auth emulator
          check_port 8080 "Firestore"  # Firestore emulator
          check_port 5001 "Functions"  # Functions emulator
          
          echo "All emulators are running!"
          
      - name: Run tests
        run: |
          set -o pipefail && xcodebuild test \
          -project MovieClub.xcodeproj \
          -scheme MovieClub \
          -sdk iphonesimulator \
          -destination "platform=iOS Simulator,name=iPhone 16 Pro,OS=latest" \
          | xcpretty --simple --color